<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
    <title>Architecture Explorer Map</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <script src="https://api.mapbox.com/mapbox-gl-js/v3.6.0/mapbox-gl.js"></script>
    <link href="https://api.mapbox.com/mapbox-gl-js/v3.6.0/mapbox-gl.css" rel="stylesheet">
    <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.0/mapbox-gl-geocoder.min.js"></script>
    <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.0/mapbox-gl-geocoder.css" type="text/css">
    <style>
        body { margin: 0; padding: 0; }
        #map { position: absolute; top: 0; bottom: 0; left: 0; right: 400px; width: calc(100% - 400px); }
        #sidebar {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            width: 400px;
            background: white;
            overflow-y: auto;
            padding: 20px;
            box-shadow: -2px 0 5px rgba(0,0,0,0.1);
        }
        #building-list {
            list-style-type: none;
            padding: 0;
        }
        .building-item {
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            background-color: #f9f9f9;
        }
        .building-item h4 {
            margin: 0 0 15px 0;
            font-size: 18px;
            color: #333;
            border-bottom: 2px solid #007bff;
            padding-bottom: 10px;
        }
        .mapboxgl-popup-content {
            padding: 20px;
            max-width: 600px;
            width: 100%;
        }
        .popup-content h3 {
            margin-top: 0;
            margin-bottom: 15px;
            font-size: 20px;
        }
        .styles-container {
            margin: 15px 0;
        }
        .badge {
            display: inline-block;
            padding: 5px 10px;
            margin: 3px;
            background-color: #007bff;
            color: white;
            border-radius: 15px;
            font-size: 14px;
        }
        .popup-content img, .building-item img {
            margin-top: 15px;
            margin-bottom: 15px;
            width: 100%;
            height: auto;
            max-height: 200px;
            object-fit: cover;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .button-container {
            text-align: center;
            margin-top: 20px;
        }
        .view-details-btn {
            display: inline-block;
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            font-size: 16px;
            transition: background-color 0.3s, transform 0.2s;
        }
        .view-details-btn:hover {
            background-color: #0056b3;
            transform: translateY(-2px);
        }
    </style>
</head>
<body>
    <div id="map"></div>
    <div id="sidebar">
        <h2>Buildings in View</h2>
        <ul id="building-list"></ul>
    </div>
    <div id="loading" style="position: absolute; top: 10px; left: 10px; background: white; padding: 5px;">Loading...</div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        console.log("DOM Content Loaded");
        
        try {
          const mapboxAccessToken = '<%= @mapbox_access_token %>';
          console.log("Mapbox Access Token:", mapboxAccessToken);
          
          if (!mapboxAccessToken) {
            throw new Error("Mapbox Access Token is not set");
          }

          mapboxgl.accessToken = mapboxAccessToken;

          console.log("Creating map");
          const map = new mapboxgl.Map({
              container: 'map',
              style: 'mapbox://styles/mapbox/streets-v9',
              center: [0, 0],
              zoom: 2
          });

          console.log("Map created");

          const buildings = <%= raw @building_analyses.to_json %>;
          const markers = [];
          const buildingList = document.getElementById('building-list');

          function updateBuildingList() {
            const bounds = map.getBounds();
            buildingList.innerHTML = '';
            buildings.forEach((building) => {
              if (building.latitude && building.longitude &&
                  bounds.contains([building.longitude, building.latitude])) {
                const li = document.createElement('li');
                li.className = 'building-item';
                const stylesHtml = building.h3_contents.map(style => `<span class="badge">${style}</span>`).join('');
                li.innerHTML = `
                  <h4>${building.address || 'No address'}</h4>
                  <img src="${building.street_view_url}" alt="Street View" width="100%">
                  <div class="styles-container">
                    <strong>Architectural Styles:</strong><br>
                    ${stylesHtml || '<span>No styles available</span>'}
                  </div>
                  <div class="button-container">
                    <a href="/architecture_explorer/${building.id}" class="view-details-btn">View Full Analysis</a>
                  </div>
                `;
                buildingList.appendChild(li);
              }
            });
          }

          map.on('load', function () {
            console.log("Map loaded, adding building markers...");
            console.log(`Processing ${buildings.length} buildings`);
            
            buildings.forEach((building, index) => {
              if (building.latitude && building.longitude) {
                console.log(`Adding marker ${index + 1}: [${building.latitude}, ${building.longitude}]`);
                try {
                  const stylesHtml = building.h3_contents.map(style => `<span class="badge">${style}</span>`).join('');

                  const marker = new mapboxgl.Marker()
                    .setLngLat([building.longitude, building.latitude])
                    .setPopup(new mapboxgl.Popup().setHTML(`
                      <div class="popup-content">
                        <h3>${building.address || 'No address'}</h3>
                        <img src="${building.street_view_url}" alt="Street View" width="100%">
                        <div class="styles-container">
                          <strong>Architectural Styles:</strong><br>
                          ${stylesHtml || '<span>Unknown</span>'}
                        </div>
                        <div class="button-container">
                          <a href="/architecture_explorer/${building.id}" class="view-details-btn">View Full Analysis</a>
                        </div>
                      </div>
                    `))
                    .addTo(map);
                  markers.push(marker);
                } catch (error) {
                  console.error(`Error adding marker ${index + 1}:`, error);
                }
              } else {
                console.log(`Building ${index + 1} missing coordinates`);
              }
            });

            document.getElementById('loading').style.display = 'none';

            // Center the map on the first valid building
            const firstValidBuilding = buildings.find(b => b.latitude && b.longitude);
            if (firstValidBuilding) {
              map.flyTo({
                center: [firstValidBuilding.longitude, firstValidBuilding.latitude],
                zoom: 10
              });
            }

            updateBuildingList();
            map.on('moveend', updateBuildingList);
          });

        } catch (error) {
          console.error("An error occurred:", error);
          document.getElementById('loading').innerHTML = "Error loading map: " + error.message;
        }
      });
    </script>
</body>
</html>