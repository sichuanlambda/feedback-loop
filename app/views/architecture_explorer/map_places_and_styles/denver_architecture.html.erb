<% content_for :title, "Denver Architecture Explorer" %>

<h1>Denver Architecture Explorer</h1>

<div id="map" style="width: 100%; height: 100%;"></div> <!-- Ensure this div exists -->
<div id="sidebar">
    <h2>Buildings in View</h2>
    <ul id="building-list"></ul>
</div>
<div id="filter-container">
    <h3 class="filter-title">Filter by Architectural Style</h3>
    <select id="style-filter" multiple>
        <!-- Options will be dynamically populated -->
    </select>
    <div class="filter-buttons">
        <button id="apply-filter" class="filter-btn">Apply Filter</button>
        <button id="reset-filter" class="filter-btn">Reset Filters</button>
    </div>
</div>
<div id="loading" style="position: absolute; top: 70px; left: 10px; background: white; padding: 5px;">Loading...</div>

<script src="https://api.mapbox.com/mapbox-gl-js/v3.6.0/mapbox-gl.js"></script>
<link href="https://api.mapbox.com/mapbox-gl-js/v3.6.0/mapbox-gl.css" rel="stylesheet">
<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.0/mapbox-gl-geocoder.min.js"></script>
<link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.0/mapbox-gl-geocoder.css" type="text/css">
<script src="https://unpkg.com/supercluster@7.1.2/dist/supercluster.min.js"></script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const mapboxAccessToken = '<%= Rails.application.credentials.mapbox[:access_token] %>';
    mapboxgl.accessToken = mapboxAccessToken;

    const map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/streets-v9',
      center: [-104.9903, 39.7392], // Denver coordinates
      zoom: 12
    });

    const buildings = <%= raw @building_analyses.to_json %>;
    const markers = [];
    const buildingList = document.getElementById('building-list');
    const styleFilter = document.getElementById('style-filter');

    // Populate style filter options
    const allStyles = new Set();
    buildings.forEach(building => {
      building.h3_contents.forEach(style => allStyles.add(style));
    });
    allStyles.forEach(style => {
      const option = document.createElement('option');
      option.value = style;
      option.textContent = style;
      styleFilter.appendChild(option);
    });

    // Create a new supercluster instance
    const supercluster = new Supercluster({
      radius: 40,
      maxZoom: 16
    });

    // Prepare the GeoJSON features for the supercluster
    const points = buildings.map(building => ({
      type: 'Feature',
      properties: { id: building.id, ...building },
      geometry: {
        type: 'Point',
        coordinates: [building.longitude, building.latitude]
      }
    })).filter(point => point.geometry.coordinates[0] && point.geometry.coordinates[1]);

    // Load the points into the supercluster
    supercluster.load(points);

    function updateMarkers() {
      // ... existing marker update logic ...
    }

    function updateBuildingList() {
      // ... existing building list update logic ...
    }

    map.on('load', function () {
      updateMarkers();
      updateBuildingList();
      document.getElementById('loading').style.display = 'none'; // Hide loading indicator
    });
  });
</script>

<style>
  body {
      margin: 0;
      padding: 0;
      height: 100vh; /* Full height */
      overflow: hidden; /* Prevent scrolling */
  }
  #map {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 400px; /* Adjust as needed for sidebar */
  }
  #sidebar {
      position: absolute;
      top: 35px;
      right: 0;
      bottom: 0;
      width: 400px;
      background: white;
      overflow-y: auto;
      padding: 20px;
      box-shadow: -2px 0 5px rgba(0,0,0,0.1);
  }
</style>
