<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Screenshot Searcher</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <!-- Optional: jQuery library -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <!-- Optional: Popper JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-M4TLZ8N6CC"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" rel="stylesheet">
    <script defer data-domain="architecturehelper.com" src="https://plausible.io/js/script.js"></script>

    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', 'G-M4TLZ8N6CC');
    </script>
    <script>
        !function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.async=!0,p.src=s.api_host+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="capture identify alias people.set people.set_once set_config register register_once unregister opt_out_capturing has_opted_out_capturing opt_in_capturing reset isFeatureEnabled onFeatureFlags getFeatureFlag getFeatureFlagPayload reloadFeatureFlags group updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures getActiveMatchingSurveys getSurveys onSessionId".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);
        posthog.init('phc_MltKSavY2s3FENOZhvocfU5qHx4f8xsJTAku0H0jVLH',{api_host:'https://app.posthog.com'})
    </script>
    <style>
        body {
            background: #E8E8E8;
            font-family: 'Arial', sans-serif; /* Clean, sans-serif font */
            color: #01161e; /* Dark blue text */
        }
        @keyframes gradientBG {
            0% {
                background-position: 0% 50%;
            }
            50% {
                background-position: 100% 50%;
            }
            100% {
                background-position: 0% 50%;
            }
        }

        .animated-gradient {
            background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
            background-size: 400% 400%;
            animation: gradientBG 15s ease infinite;
        }
        .navbar {
            background: #333;
            border-bottom: 3px solid #eff6e0;
        }
        .container {
            background: #FFFFFF; /* White container background */
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
            margin-bottom: 20px;
        }
        .gpt-form-container {
            background-color: #FFFFFF; /* White form background */
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .btn-primary, .custom-file-upload {
            width: 25%; /* Make buttons take full width of the container */
            background-color: #0056b3;
            color: white;
            border-radius: 20px;
            padding: 10px 20px;
            font-size: 18px;
            font-weight: bold;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            border: none;
            margin-bottom: 10px; /* Add spacing between buttons */
            margin-top: 10px; /* Add spacing between buttons */
        }
        .btn-primary:hover {
            background-color: #004080; /* Darker blue on hover */
            box-shadow: 0 4px 6px rgba(0,0,0,0.15);
        }
        .btn-primary.disabled, .btn-primary:disabled, .btn btn-primary btn-block {
            background-color: #598392; 
            border: none;
            border-radius: 20px;
            padding: 10px 20px;
            font-size: 18px;
            font-weight: bold;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }
        .form-control {
            border-radius: 20px;
            font-size: 16px;
            box-shadow: inset 0 1px 3px rgba(0,0,0,0.1); /* Slight inset shadow for depth */
        }
        .custom-file-upload {
            cursor: pointer; /* Indicate it's clickable */
        }
        .gpt-answer-container {
            background: #FFFFFF; /* A white background */
            margin-top: 1rem;
            padding: 1rem;
            border-radius: 5px;
            font-size: 16px;
            display: none; /* Initially hidden */
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .btn-small {
            padding: 2px 5px;
            font-size: 5px;
        }
          #screenshot-input {
            display: none;
        }
        #image-preview-container {
            display: flex;
            justify-content: center; /* Center horizontally */
            align-items: center; /* Center vertically (if needed) */
            text-align: center; /* Center the image horizontally */
            border-radius: 5px;
            border: none; /* Example: a light grey border, 2 pixels thick */
            margin-top: 20px; /* Add some space above the container */
        }
        #image-preview {
            max-width: 100%; /* Allow the image to take full width of its container */
            max-height: auto; /* Maintain aspect ratio */
            margin-top: 10px;
            border-radius: 5px;
            display: none; /* Hidden initially */
        }
        /* Hide the actual file input control */
        #screenshot-input {
            display: none;
        }
        .custom-icon {
            font-size: 1rem;
            border-radius: 5px;
            vertical-align: middle;
            background-color: #0056b3;
            color: white;
        }
        .loader {
            border: 5px solid #f3f3f3; /* Light loader ring */
            border-radius: 50%;
            border-top: 5px solid #0056b3; /* Blue loader top */
            width: 50px;
            height: 50px;
            -webkit-animation: spin 2s linear infinite;
            animation: spin 2s linear infinite;
            margin: auto;
            display: none; /* Initially hidden */
        }
        .card {
            display: flex;
            flex-direction: column;
            height: 100%; /* This ensures all cards have the same height */
            padding: 5px;
        }
        .card-img-top {
            border: 3px solid, #black;
            border radius: 5%;
            width: 100%;
            height: 100px; /* Adjust the height as needed */
            object-fit: cover; /* This will cover the area, similar to 'background-size: cover' */
        }
        .date-and-button-container {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            padding: 0 15px; /* Adjust as needed */
            margin-top: 10px; /* Adjust as needed */
        }
        @-webkit-keyframes spin {
            0% { -webkit-transform: rotate(0deg); }
            100% { -webkit-transform: rotate(360deg); }
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
<div class="container" style="background: #FFFFFF; border-radius: 15px; box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.1);">
    <div class="row justify-content-center">
        <div class="col-md-12">
            <div class="text-center">
                <h1 class="mt-5" style="color: #01161e;"> Screenshot Text Searcher ⛏️</h1>
                <p style="color: #01161e;">Upload your screenshot, and we'll extract any text from it so you can find it later</p>
            </div>

            <div class="gpt-form-container text-center"> <!-- Ensure text-center is here -->
                <%= form_with url: analyze_screenshot_path, method: :post, local: true, multipart: true, id: "screenshot-upload-form" do |form| %>
                    <div class="form-group">
                        <label for="screenshot-input" class="custom-file-upload" id="file-upload-label">
                            Upload Screenshot
                        </label>
                        <%= form.file_field :screenshot, multiple: true, name: 'screenshots[]', class: "form-control", id: "screenshot-input" %>
                        <!-- Optional: Image preview -->
                        <div id="file-info" style="margin-top: 10px;"></div>
                        <div id="image-preview-container" class="text-center"> <!-- Ensure text-center is here -->
                        <img id="image-preview" src="#" alt="Image Preview" style="display: none; max-width: 100%; max-height: 500px; margin-top: 10px; border-radius: 5px;"/>
                        </div>
                    </div>
                    <div class="loader"></div>
                    <div style="display: flex; justify-content: center; margin-top: 10px;">
                        <%= form.submit "Analyze Screenshot", class: "btn btn-primary", id: "analyze-button", style: "display: none;" %>
                    </div>
                     <% end %>
                </div>
                
                <div id="screenshot-answer" class="gpt-answer-container">
                    <div class="loader"></div>
                    <div id="response-text"></div>
                </div>
            </div>
        </div>
    </div>
<div class="container">
  <h2>Image Submissions</h2>

  <%= form_tag screenshot_searcher_path, method: :get, class: "search-form" do %>
    <%= text_field_tag :search, params[:search], placeholder: "Search Extracted Text", class: "form-control" %>
    <%= submit_tag "Search", class: "btn btn-primary" %>
  <% end %>

  <!-- Pagination controls at the top -->
  <%= paginate @screenshot_analyses %>

  <div class="row">
    <% @screenshot_analyses.each_with_index do |analysis, index| %>
<div class="col-md-4 mb-4"">
  <div class="card">
    <% if analysis.screenshots.attached? %>
      <% analysis.screenshots.each do |screenshot| %>
        <%= image_tag screenshot, class: 'card-img-top' %>
      <% end %>
    <% end %>
    <div class="date-and-button-containter" style="display: flex; flex-direction: row; justify-content: space-between; align-items: center;">
      <small class="text-muted"><%= analysis.created_at.strftime("%b %d, %Y %H:%M") %></small>
      <%= button_tag class: 'btn btn-primary btn-preview', data: { toggle: 'modal', target: "#imageModal#{index}" } do %>
        <i class="fa fa-search"></i>
      <% end %>
    </div>
    <div class-"card-body">
      <p class="card-text"><%= truncate(analysis.extracted_text, length: 100) %></p>
    </div>
  </div>
</div>

      <!-- Modal -->
      <div class="modal fade" id="imageModal<%= index %>" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel<%= index %>" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="imageModalLabel<%= index %>">Image Preview</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <% if analysis.screenshots.attached? %>
                <% analysis.screenshots.each do |screenshot| %>
                  <%= image_tag screenshot, class: 'img-fluid' %>
                <% end %>
              <% end %>                  
            </div>
          </div>
        </div>
      </div>
    <% end %>
  </div>

  <!-- Pagination controls at the bottom -->
  <%= paginate @screenshot_analyses %>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('screenshot-upload-form');
    const loader = document.querySelector('.loader');
    const fileInfo = document.getElementById('file-info');
    const screenshotInput = document.getElementById('screenshot-input');
    const analyzeButton = document.getElementById('analyze-button'); // Get the analyze button

    screenshotInput.addEventListener('change', function() {
        if (this.files.length > 0) {
            const fileNames = Array.from(this.files).map(file => file.name).join(', ');
            fileInfo.textContent = `Selected files: ${fileNames}`;
            analyzeButton.style.display = 'block'; // Show the analyze button
        } else {
            fileInfo.textContent = '';
            analyzeButton.style.display = 'none'; // Hide the analyze button if no files are selected
        }
    });

    form.addEventListener('submit', (event) => {
        event.preventDefault();
        loader.style.display = 'block';

        const formData = new FormData(form);

        fetch('/analyze_screenshot', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            loader.style.display = 'none';
            fileInfo.textContent = 'Upload and analysis successful! Refresh page to search across your updated library!';
            // Hide the analyze button after submission
            analyzeButton.style.display = 'none';
        })
        .catch(error => {
            loader.style.display = 'none';
            fileInfo.textContent = 'Error processing files';
            console.error('Error:', error);
            // Hide the analyze button if there's an error
            analyzeButton.style.display = 'none';
        });
    });
});
</script>

</body>
</html>