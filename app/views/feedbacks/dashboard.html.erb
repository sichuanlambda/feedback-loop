<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Feedback Dashboard</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.14.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.23/css/jquery.dataTables.css">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-M4TLZ8N6CC"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', 'G-M4TLZ8N6CC');
    </script>
    <!-- Custom Styles -->
    <style>
        .container {
            background-color: #fff;
            padding: 20px 30px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
            border-radius: 5px;
            margin-bottom: 30px;
            max-width: 80%; 
        }

        h1 {
            font-size: 28px;
            color: #333;
            margin-bottom: 20px;
        }

        .metric-container {
            text-align: center;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .metric-container:hover {
            transform: translateY(-5px);
        }

        .metric-icon {
            font-size: 40px;
            margin-bottom: 10px;
        }

        .metric-number {
            font-size: 30px;
            font-weight: bold;
            color: #4a90e2;
        }

        .metric-description {
            font-size: 18px;
            color: #666;
        }

        /* Colors for different metrics */
        .tweets .metric-icon { color: #1DA1F2; }
        .users .metric-icon { color: #FFC107; }
        .screenshots .metric-icon { color: #E91E63; }
        .arch-image-gen .metric-icon { color: #800020; } /* Burgundy for ArchImageGen */

        /* Responsive Grid */
        @media (min-width: 768px) {
            .metric-row {
                display: flex;
                justify-content: space-around;
            }
        }
        body {
            background-color: #E8E8E8; /* Sets the entire page background to black */
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Dashboard Overview</h1>
        <div class="metric-row">
            <div class="metric-container tweets">
                <i class="fas fa-feather metric-icon"></i>
                <div class="metric-number"><%= GptInteraction.count %></div>
                <div class="metric-description">Tweets Roasted</div>
            </div>
            <div class="metric-container users">
                <i class="fas fa-users metric-icon"></i>
                <div class="metric-number"><%= User.count %></div>
                <div class="metric-description">Total Signups</div>
            </div>
            <div class="metric-container screenshots">
                <i class="fas fa-file-image metric-icon"></i>
                <div class="metric-number"><%= ScreenshotAnalysis.count %></div>
                <div class="metric-description">Screenshots Uploaded</div>
            </div>
            <div class="metric-container dog-ratings">
                <i class="fas fa-dog metric-icon"></i>
                <div class="metric-number"><%= DogRating.count %></div>
                <div class="metric-description">Dogs Rated</div>
            </div>
            <div class="metric-container arch-image-gen">                
                <i class="fas fa-home metric-icon"></i>
                <div class="metric-number"><%= ArchImageGen.count %></div>
                <div class="metric-description">Architecture Images Generated</div>
            </div>
            <div class="metric-container arch-image-gen">
                <i class="fas fa-home metric-icon"></i>
                <div class="metric-number"><%= BuildingAnalysis.total_count %></div>
                <div class="metric-description">Real Structures Analyzed</div>
            </div>
        </div>
    </div>

<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.23/js/jquery.dataTables.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4"></script>
<script>
    $(document).ready(function() {
        // Initialize the DataTable with sorting on the "Submitted At" column in descending order.
        $('#feedbackTable').DataTable({
            "order": [[0, "desc"]]
        });

        const now = new Date();
        const daysInMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0).getDate();

        var feedbackDates = Array.from({ length: daysInMonth }, (_, i) => (i + 1).toString());
        var goodFeedbackCounts = Array.from({ length: daysInMonth }, () => 0);
        var badFeedbackCounts = Array.from({ length: daysInMonth }, () => 0);
        var totalFeedbackCounts = Array.from({ length: daysInMonth }, () => 0);

        // Process feedback data.
        $('#feedbackTable tbody tr').each(function() {
            const dateCell = new Date($(this).find('td:eq(0)').html());
            const voteCell = $(this).find('td:eq(2)').html();

            const dayOfMonth = dateCell.getDate() - 1;

            if (voteCell.includes('fa-thumbs-up')) {
                goodFeedbackCounts[dayOfMonth] += 1;
            } else {
                badFeedbackCounts[dayOfMonth] += 1;
            }
            totalFeedbackCounts[dayOfMonth] += 1;
        });

        // Calculate feedback percentages.
        var goodFeedbackPercentage = goodFeedbackCounts.map((count, index) => {
            const total = totalFeedbackCounts[index];
            return total === 0 ? 0 : (count / total) * 100;
        });

        var badFeedbackPercentage = badFeedbackCounts.map((count, index) => {
            const total = totalFeedbackCounts[index];
            return total === 0 ? 0 : (count / total) * 100;
        });

        // Feedback Percentage Chart Data.
        var feedbackPercentageData = {
            labels: feedbackDates,
            datasets: [{
                label: 'Good Feedback %',
                data: goodFeedbackPercentage,
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 1
            }, {
                label: 'Bad Feedback %',
                data: badFeedbackPercentage,
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1
            }]
        };

        // Feedback Over Time Chart Data.
        var feedbackOverTimeData = {
            labels: feedbackDates,
            datasets: [{
                label: 'Feedback Over Time',
                data: totalFeedbackCounts,
                backgroundColor: 'rgba(153, 102, 255, 0.2)',
                borderColor: 'rgba(153, 102, 255, 1)',
                borderWidth: 1
            }]
        };

        // Feedback Percentage Chart.
        var percentageCtx = document.getElementById('feedbackPercentageChart').getContext('2d');
        var feedbackPercentageChart = new Chart(percentageCtx, {
            type: 'line',
            data: feedbackPercentageData,
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        max: 100,
                        title: {
                            display: true,
                            text: 'Percentage (%)'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Day of Month'
                        }
                    }
                }
            }
        });

        // Feedback Over Time Chart.
        var timeCtx = document.getElementById('feedbackOverTimeChart').getContext('2d');
        var feedbackOverTimeChart = new Chart(timeCtx, {
            type: 'line',
            data: feedbackOverTimeData,
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Number of Feedbacks'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Day of Month'
                        }
                    }
                }
            }
        });

    });
</script>

</body>

</html>