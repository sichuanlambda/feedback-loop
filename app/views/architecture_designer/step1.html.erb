<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Architecture Helper</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-M4TLZ8N6CC"></script>
    <script defer data-domain="app.architecturehelper.com" src="https://plausible.io/js/script.js"></script>
    <script>
        !function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.async=!0,p.src=s.api_host+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="capture identify alias people.set people.set_once set_config register register_once unregister opt_out_capturing has_opted_out_capturing opt_in_capturing reset isFeatureEnabled onFeatureFlags getFeatureFlag getFeatureFlagPayload reloadFeatureFlags group updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures getActiveMatchingSurveys getSurveys onSessionId".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);
        posthog.init('phc_MltKSavY2s3FENOZhvocfU5qHx4f8xsJTAku0H0jVLH',{api_host:'https://app.posthog.com'})
    </script>
    <style>
        /* Custom styles */
        .container{
            padding: 15px 0;
            width: 100%; /* Full width of the column */
        }
        .btn-primary{
            width: 45%; /* Make buttons take full width of the container */
            background-color: #0056b3;
            color: white;
            border-radius: 10px;
            padding: 10px 20px;
            font-size: 18px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            border: none;
            margin-bottom: 0px; /* Add spacing between buttons */
            margin-top: 15px;
        }
        .btn-primary:hover {
            background-color: #004080; /* Darker blue on hover */
        }
        .option-btn {
            /* border: 2px solid #0056b3; Primary color border */
            background-color: white;
            color: grey;
            margin: 5px;
            padding: 12px 18px; /* Increased padding */
            border-radius: 10px;
            transition: background-color 0.3s, color 0.3s;
            font-size: 0.9rem; /* Slightly larger font size */
        }

        .option-btn:hover {
            background-color: #0056b3;
            color: white;
            margin: 5px;
            padding: 12px 18px; /* Increased padding */
            border-radius: 20px;
            text-align: center;
            border-radius: 20px;
            transition: all 0.3s ease;
        }
        .option-container {
            position: relative; /* Establishes a positioning context for absolute children */
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 15px;
            border-radius: 10px; /* Matches other elements */
            overflow: hidden; /* Ensures that the button does not go outside the border */
        }

        .option-image {
            width: 250px;
            height: 350px;
            object-fit: cover;
            margin-bottom: 5px; /* Removed since the button will overlay the image */
            padding: 5px;
            border-radius: 20px;
            display: block; /* Makes the image a block-level element, if it's not already */
        }

        .btn.option-btn {
            position: absolute; /* Absolutely position the button */
            bottom: 22px; /* Distance from the bottom of the container */
            left: 50%; /* Center the button */
            transform: translateX(-50%); /* Offset by half the width of the button for perfect centering */
            width: 90%; /* Width relative to the option container */
            margin: 0; /* Remove margin */
            height: 45px;
            /* The rest of your button styles */
        }

        .options-row {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
        }
        .landing-section {
            padding: 40px 0;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .landing-section img {
            width: 50%; /* Reduced image size by about 50% */
            border-radius: 20px;
        }
        .feature-card, .latest-images-container {
            display: flex;
            flex-direction: column; /* Align children vertically */
            align-items: center; /* Center-align items */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            background: white;
            margin-bottom: 30px;
            padding: 20px; /* Add some padding */
            padding-bottom: 10px;
        }
        .feature-card .row {
            margin-left: 0; /* Reset row margin */
            margin-right: 0; /* Reset row margin */
        }

        .feature-card .card-img {
            width: 100%; /* Full width of the column */
            margin-right: 0; /* Reset margin right */
            padding-right: 0; /* Reset padding right */
            /* Adjust image size as needed */
        }

        .card-content {
            flex-grow: 1;
            text-align: center;
            padding: 15px; /* Reduced padding */
        }

        .card-content h3 {
            font-size: 1.25rem; /* Adjust headline font size if needed */
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .card-content p {
            font-size: 0.9rem; /* Reduced font size */
            margin-bottom: 0.5rem; /* Reduced bottom margin */
            padding: 20px;
        }

        .stat {
            padding: 15px; /* Reduced padding */
            display: flex;
            flex-direction: column;
            justify-content: center; /* Center stat vertically */
            padding: 20px;
        }

        .metric-number {
            font-size: 1.5rem; /* Adjusted for space */
        }

        .metric-description {
            font-size: 0.9rem; /* Reduced font size */
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .feature-card {
                flex-direction: column;
            }

            .feature-card .card-img,
            .card-content,
            .stat {
                width: 100%; /* Full width on smaller screens */
            }

            .card-content h3 {
                font-size: 1.2rem; /* Adjusted for smaller screens */
                white-space: normal; /* Allow wrapping on small screens */
            }
            .architecture-identifier {
                text-align: center; /* Center text and inline elements */
            }

            .architecture-identifier .col-md-6, .architecture-identifier .row {
                width: 100%; /* Full width for mobile */
                margin-left: auto;
                margin-right: auto;
                display: block; /* Change to block display */
            }

            .architecture-identifier img {
                margin-left: auto;
                margin-right: auto;
                display: block; /* Necessary for auto margins to work on images */
            }

            .architecture-identifier .btn {
                margin: 10px auto; /* Add auto margins to center the buttons */
                display: block; /* Necessary for auto margins to work on buttons */
            }
        }
        h1 {
            font-size: 1.6rem;
            color: black;
            z-index: 1; /* This ensures the h1 is above the image */
            margin-right: -10%; /* Negative margin for overlapping */
            padding-right: 10%; 
            padding-bottom: 30px;
        }
        h3 {
            margin: 30px;
        }
        .latest-images-row {
            width: 100%; /* Take full width */
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
        }
        h2 {
            text-align: center;
        }
        h4 {
            padding-top:20px;
            padding-left: 10px;
        }
        .latest-image-container {
            position: relative; /* Add this to create a positioning context */
            width: 150px; /* Set a fixed width */
            height: 150px;
            margin: 10px;
            padding: 5px;
        }

        .latest-image {
            width: 150px; /* Adjust as needed */
            height: 150px;
            border-radius: 5px;
            object-fit: cover;
        }
        .btn-secondary {
            background-color: white;
            color: #0056b3; /* Adjust the color to match your theme */
            /* border: 2px solid #0056b3; */
            border-radius: 20px;
            padding: 10px 20px;
            font-size: 18px;
            text-align: center;
            transition: all 0.3s ease;
            margin: 20px
        }

        .btn-secondary:hover {
            background-color: #0056b3;
            color: white;
            border-color: #003366; /* Darker blue for hover border */
        }
        .next-button-container {
            width: 100%; /* Take full width */
            margin-top: 20px; /* Add space above the button */
        }
        body {
            background-color: #E8E8E8; /* Sets the background color */
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .main-section {
            display: flex;
            justify-content: space-between; /* Ensures separation of child elements */
            align-items: center;
            padding: 40px;
            background-color: #f8f9fa;
            border-radius: 10px; /* Matching border-radius with other sections */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Optional: if you want to match shadow as well */
            margin-bottom: 30px;
            position: relative; /* For positioning title */
        }

        .header-content {
            flex-basis: 50%;
            padding-right: -10px; /* Adjust this value to control the space between the text and the images */
        }
        .header-content p {
            font-size: 0.9rem; /* Adjust the font size as needed */
            margin-bottom: 0.5rem; /* Adjust bottom margin as needed */
            padding: 0; /* Remove padding */
            padding-left: 20px;
            position: relative; /* Needed for pseudo-element positioning */
        }

        .header-content p::before {
            content: '\2713'; /* Unicode checkmark */
            color: green; /* Color of the checkmark */
            font-weight: bold; /* Make the checkmark bold */
            display: inline-block; /* Inline-block to keep it with the text */
            width: 1.5em; /* Space for the checkmark */
            margin-left: -1.5em; /* Negative margin to pull checkmark into position */
            margin-bottom: 2px;
        }

        .header-section h1 {
            font-size: 2.5rem;
            color: #333;
            position: relative; /* Relative to its normal position */
            z-index: 2; /* Above the images */
            background: rgba(255, 255, 255, 0.5); /* Semi-transparent background */
            padding: 10px; /* Padding around the text */
            border-radius: 10px; /* Rounded corners for the background */
            box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Soft shadow for depth */
            min-width: 0%; /* Minimum width before text wrapping occurs */
            margin-bottom: 10px;
        }

        .image-collage-container {
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            grid-gap: 15px;
            flex-basis: 50%; /* Takes up half of the flex container */
            max-width: 50%; /* Maximum width is half of the container */
            margin-left: auto; /* Pushes the grid to the right */
        }

        .header-section p {
            color: #666;
            margin-bottom: 20px;
        }

        /* Define how each image spans rows and columns */
        .image-collage-large { /* Large images */
            grid-column: span 6;
            grid-row: span 4;
        }

        .image-collage-medium { /* Medium images */
            grid-column: span 3;
            grid-row: span 4;
        }

        .image-collage-small { /* Small images */
            grid-column: span 3;
            grid-row: span 2;
        }

        .image-collage-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 10px;
        }

        /* ... responsive adjustments ... */
        @media (max-width: 992px) {
            .main-section {
                flex-direction: column;
                padding: 30px;
            }

            .header-content, .image-collage-container {
                flex-basis: 100%;
                margin-left: 0;
                margin-bottom: 20px;
            }
        }
        .highlight {
            color: #0056b3; /* Replace with your desired color */
            display: inline-block; /* Explicitly set to inline */
            font-weight: bold;
        }
        .architecture-identifier .col-md-6 {
            display: flex;
            flex-direction: column;
            justify-content: space-between; /* This will space out the child elements evenly */
            height: auto; /* Set height to 100% to occupy full available vertical space */
            height: 50;
            width: 80%
        }


        .large-architecture-image {
            width: 100%; /* Adjust the width as necessary */
            height: auto;
            margin-bottom: 20px;
        }

        /* Individual small image containers */
        .small-image-container {
            flex-grow: 1;
            display: flex;
            flex-direction: row; /* Align items in a row */
            align-items: center;
            margin-bottom: 15px;
            text-align: left;
        }

        .small-image-wrapper {
            flex: 0 0 auto;
            margin-right: 10px;
        }

        .small-image-title {
            flex: 1;
            padding-left: 10px;
        }

        .small-image-container img {
            width: 40%; /* Adjust width as necessary */
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .header-section h1 {
                word-wrap: break-word;
                font-size: 1.2rem; /* Smaller font size for mobile */
                margin-right: 0; /* Adjust margin for mobile */
                padding-right: 0; /* Adjust padding for mobile */
            }
            .header-section h1 span {
                display: inline; /* Default display for spans */
                font-size: 30px; /* Adjust font size */
                /* Other styles as needed */
            }
            .header-content, .image-collage-container {
                flex-basis: 90%;
                max-width: 90%;
            }

            .landing-section, .main-section, .feature-card, .latest-images-container {
                flex-direction: column;
            }

            .landing-section img, .feature-card .card-img, .latest-image {
                width: 80%; /* Full width on mobile */
            }

            .btn-primary, .btn-secondary {
                width: 80%; /* Larger clickable area */
                font-size: 16px; /* Adjust font size */
            }

            /* Adjust text sizes for readability */
            h2, h3, h4, p {
                font-size: 0.8rem;
            }
            h1, {
                font-size:1.6rem;
            }
            .large-architecture-image {
                margin-bottom: 10px; /* Reduced bottom margin for mobile */
            }
            .small-image-container {
                margin-top: 5px; /* Reduced top margin for mobile */
                /* Adjust padding if necessary */
            }
            .container {
                text-align: center; /* Center text and inline elements */
            }

            .latest-images-row, .row {
                display: flex;
                justify-content: center; /* Center flex items horizontally */
                align-items: center; /* Center flex items vertically */
                flex-direction: column; /* Stack flex items vertically */
            }

            /* Center images and buttons */
            .option-image, .btn, .latest-image, .small-architecture-image {
                margin-left: auto;
                margin-right: auto;
            }
            .row {
                width: 80%;
            }
            .architecture-identifier .col-md-6 {
                flex-basis: 100%; Each column takes full width
                max-width: 100%; /* Ensure columns don't exceed the container's width */
                padding: 0; /* Removes padding if necessary */
            }
        }
        
        .text-container {
        }
        .architecture-identifier {
            /* Example styles */
            background-color: white;
            padding: 20px;
            margin-top: 20px;
            margin-bottom: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .timestamp {
            position: absolute;
            left: 50%;
            transform: translateX(-50%); /* Only translate along the X-axis */
            color: white; /* or any color you prefer */
            background-color: orange;
            padding: 5px 10px;
            border-top-left-radius: 0;
            border-top-right-radius: 0;
            border-bottom-left-radius: 15px;
            border-bottom-right-radius: 15px;            
            font-size: 0.9rem; /* Adjust as needed */
            width: 100px;
            white-space: nowrap;
            z-index: 2; /* Ensure it's above other elements */
        }
    </style>
</head>
    <body>
    <% unless user_signed_in? %>
    <div class="main-section">
        <div class="header-content">
            <h1><span>Generate and Understand</span><br><span>Architecture </span><span class="highlight"> in seconds</span></h1>
            <h4>Perfect for...</h4>
            <p>Creating your dream home & finding inspiration</p>
            <p>Mixing influences and styles</p>
            <p>Learning about the architecture around you</p>
            <button type="button" id="navigateButton" class="btn btn-primary" data-url="/users/sign_up">Not a User? Try for Free!</buttonr>
        </div>
        <div class="image-collage-container">
            <%= image_tag 'curved wooden building.png', alt: 'Large Building', class: 'image-collage-large img-fluid' %>
            <%= image_tag 'maximal grand.png', alt: 'Residential Home', class: 'image-collage-medium img-fluid' %>
            <%= image_tag 'bohi int.png', alt: 'Architecture Style', class: 'image-collage-small img-fluid' %>
            <%= image_tag 'cathederal int.jpg', alt: 'Interior Design', class: 'image-collage-small img-fluid' %>
        </div>
    </div>
    <% end %>
    <h2>AI-Powered Architecture Identifier</h2>
        <div class="container architecture-identifier">
        <div class="row">
            <div class="col-md-12">
                <%= image_tag '3tilesexplanation.png', alt: 'Large Image', class: 'img-fluid large-architecture-image' %>
                            <div class="col text-center">
                <button type="button" id="analyzeButton" class="btn btn-primary" data-url="/architecture_explorer/new">Analyze a Building!</button>
            </div>
            </div>
            </div>
        </div>
    </div>
    <!--section with the initial selections-->
    <h2>Generate Your Dream Architecture</h2>
    <div class="container">
        <%= form_with url: '/architecture_designer/step2', method: :get, id: 'options_form' do %>
            <div class="feature-card">
                <div class="card-content text-center">
                    <h3>What Would You Like to Bring to Life?</h3>
                    <div class="options-row">
                        <% ['Residential Home', 'Large Building', 'Interior Design', 'Architecture Style'].each do |option| %>
                            <div class="option-container">
                                <% image_file = case option
                                    when 'Residential Home' then 'residential_home.png'
                                    when 'Large Building' then 'large_building.png'
                                    when 'Interior Design' then 'interior_style.png'
                                    when 'Architecture Style' then 'architecture_style.png'
                                    else 'default.png'
                                end %>
                                <%= image_tag image_file, alt: "#{option} Image", class: 'option-image' %>
                                <%= button_tag type: 'button', class: 'btn option-btn', data: { value: option } do %>
                                    <%= option %>
                                <% end %>
                            </div>
                        <% end %>
                    </div>
                    <%= hidden_field_tag 'selected_option', nil, id: 'selected_option' %>
                </div>
            </div>
        <% end %>
    </div>

      <!-- Latest Images Section -->
    <h2>Latest Creations</h2>
    <div class="container">
        <div class="latest-images-container">
            <div class="latest-images-row" style="display: flex; flex-wrap: wrap; justify-content: space-around;">
                <% @latest_images.each do |image| %>
                <% if image.image_url.present? %>
                    <div class="latest-image-container" style="position: relative;">
                    <%= image_tag image.image_url, alt: "Latest Image", class: "latest-image" %>
                    <p class="timestamp"><%= precise_time_ago_in_words(image.created_at) %> ago</p>
                    </div>
                <% else %>
                    <p>Image not available</p>
                <% end %>
                <% end %>
            </div>
            <div class="next-button-container mt-3 text-center">
                <%= link_to 'Community Creations', user_creations_path, class: 'btn btn-secondary' %>
            </div>
        </div>
    </div>
    <h2>Building Library</h2>
    <div class="container">
        <div class="latest-images-container">
            <div class="latest-images-row" style="display: flex; flex-wrap: wrap; justify-content: space-around;">
                <% @building_library.each do |building| %>
                    <% if building.image_url.present? %>
                        <div class="latest-image-container" style="position: relative;">
                            <%= image_tag building.image_url, alt: "Building Image", class: "latest-image" %>
                            <span class="timestamp"><%= time_ago_in_words(building.created_at) %> ago</span>
                        </div>
                    <% else %>
                        <p>Image not available</p>
                    <% end %>
                <% end %>
            </div>
            <div class="next-button-container mt-3 text-center">
                <%= link_to 'View More Buildings', building_library_path, class: 'btn btn-secondary' %>
            </div>
        </div>
    </div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var optionButtons = document.querySelectorAll('.option-btn');
        optionButtons.forEach(function (btn) {
            btn.addEventListener('click', function () {
                document.getElementById('selected_option').value = this.dataset.value;
                document.getElementById('options_form').submit();
            });
        });

        var navigateButton = document.getElementById('navigateButton');
        if (navigateButton) {
            navigateButton.addEventListener('click', function() {
                window.location.href = this.dataset.url;
            });
        }

        // Add similar event listener for analyzeButton
        var analyzeButton = document.getElementById('analyzeButton');
        if (analyzeButton) {
            analyzeButton.addEventListener('click', function() {
                window.location.href = this.dataset.url;
            });
        }
    });
</script>
</body>
</html>
