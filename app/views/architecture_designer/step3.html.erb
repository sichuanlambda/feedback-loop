<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LLM Validator - Home</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-M4TLZ8N6CC"></script>
    <script defer data-domain="architecturehelper.com" src="https://plausible.io/js/script.js"></script>
    <style>
        /* Custom styles */
        .container{
            padding: 40px 0;
            width: 75%; /* Full width of the column */
        }
        .btn-primary{
            width: 30%; /* Make buttons take full width of the container */
            background-color: #0056b3;
            color: white;
            border-radius: 20px;
            padding: 10px 20px;
            font-size: 18px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            border: none;
        }
        .btn-primary:hover {
            background-color: #004080; /* Darker blue on hover */
        }
        .button-group {
            position: relative; /* Relative positioning for the container */
            display: flex;
            justify-content: center; /* Center the content (primarily for the 'Next' button) */
            align-items: center;
            width: 100%;
        }

        .btn-secondary {
            width: 25%
            position: absolute; /* Absolute positioning for the 'Back' button */
            left: 0; /* Align to the left */
            border-radius: 20px;
            padding: 10px 20px;
        }
        .option-btn {
            border: 2px solid #0056b3; /* Primary color border */
            background-color: white;
            color: grey;
            margin: 5px;
            padding: 10px 15px;
            border-radius: 20px;
            transition: background-color 0.3s, color 0.3s;
        }

        .option-btn.active {
            background-color: #0056b3; /* Change to primary color for active state */
            color: white;
            transform: scale(1.05); /* Slightly increase the size */
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
        .landing-section {
            padding: 40px 0;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .landing-section img {
            width: 50%; /* Reduced image size by about 50% */
            border-radius: 20px;
        }
        .feature-card {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            background: white;
            min-height: 200px;
            margin-bottom: 30px; /* Reduced space between cards */
        }
        .feature-card .row {
            margin-left: 0; /* Reset row margin */
            margin-right: 0; /* Reset row margin */
        }

        .feature-card .card-img {
            width: 100%; /* Full width of the column */
            margin-right: 0; /* Reset margin right */
            padding-right: 0; /* Reset padding right */
            /* Adjust image size as needed */
        }

        .card-content {
            flex-grow: 1;
            text-align: center;
            padding: 15px; /* Reduced padding */
        }

        .card-content h3 {
            font-size: 1.25rem; /* Adjust headline font size if needed */
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .card-content p {
            font-size: 0.9rem; /* Reduced font size */
            margin-bottom: 0.5rem; /* Reduced bottom margin */
            padding: 20px;
        }

        .stat {
            padding: 15px; /* Reduced padding */
            display: flex;
            flex-direction: column;
            justify-content: center; /* Center stat vertically */
            padding: 20px;
        }

        .metric-number {
            font-size: 1.5rem; /* Adjusted for space */
        }

        .metric-description {
            font-size: 0.9rem; /* Reduced font size */
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .feature-card {
                flex-direction: column;
            }

            .feature-card .card-img,
            .card-content,
            .stat {
                width: 100%; /* Full width on smaller screens */
            }

            .card-content h3 {
                font-size: 1.2rem; /* Adjusted for smaller screens */
                white-space: normal; /* Allow wrapping on small screens */
            }
        }
           body {
        background-color: #E8E8E8; /* Sets the entire page background to black */
        }
        h1 {
            font-size: 48px;
            color: black;
            margin-bottom: 20px;
        }
        .loader {
            border: 5px solid #f3f3f3; /* Light loader ring */
            border-radius: 50%;
            border-top: 5px solid #0056b3; /* Blue loader top */
            width: 50px;
            height: 50px;
            -webkit-animation: spin 2s linear infinite;
            animation: spin 2s linear infinite;
            margin: auto;
            display: none; /* Initially hidden */
            margin-top: 20px;
        }
        @-webkit-keyframes spin {
            0% { -webkit-transform: rotate(0deg); }
            100% { -webkit-transform: rotate(360deg); }
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .custom-progress-bar {
            height: 20px; /* Custom height */
            background-color: #e0e0e0; /* Light grey background */
            position: relative;
            radius: 20px;
        }

        .custom-progress-bar .progress-bar {
            background-color: #0056b3; /* Custom fill color */
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 66.6%; /* Represents step 2 of 3 */
        }

        .custom-progress-bar .progress-text {
            position: absolute;
            width: 100%;
            text-align: center;
            line-height: 20px; /* Same as the height of the progress bar */
            color: white; /* Custom text color */
        }
        .btn-primary{
            width: 35%; /* Make buttons take full width of the container */
            background-color: #0056b3;
            color: white;
            border-radius: 20px;
            padding: 10px 20px;
            font-size: 18px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            border: none;
        }
    </style>
</head>
<body>
    <div class="container">

        <!-- Progress Bar for Step 3 -->
        <div class="custom-progress-bar">
            <div class="progress-bar" role="progressbar" style="width: 100%;" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
            <div class="progress-text">Step 3 of 3</div>
        </div>

        <%= form_with url: '/architecture_designer/submit', method: :post, id: 'step3_form', remote: true do |form| %>

            <!-- Windows and Lighting Section -->
            <div class="feature-card">
                <div class="card-content text-center">
                    <h3>Windows and Lighting</h3>
                    <% ['Large Panoramic Windows', 'Small, Intricate Window Designs', 'Skylights and Natural Light Focus', 
                    'Artificial and Ambient Lighting', 'Stained Glass and Decorative', 'Energy-Efficient and Smart Windows', 
                    'Bay and Bow Windows', 'Sliding and Folding Windows', 'Picture and Fixed Windows', 'Tinted and Reflective Glass', 
                    'Louvered and Shuttered', 'Clerestory and High Windows'].each do |option| %>
                        <%= hidden_field_tag 'user_selections[]', option, id: "input_#{option.parameterize}", disabled: true %>
                        <button type="button" class="btn option-btn" onclick="toggleSelection('<%= option.parameterize %>')"><%= option %></button>
                    <% end %>
                </div>
            </div>

            <!-- Outdoor Integration Section -->
            <div class="feature-card">
                <div class="card-content text-center">
                    <h3>Outdoor Integration</h3>
                    <% ['Extensive Green Spaces and Gardens', 'Sculptures and Water Features', 'Terraces and Outdoor Living Areas', 
                    'Minimal Outdoor Interaction', 'Rooftop Gardens and Patios', 'Balconies and Verandas', 'Courtyards and Enclosed Spaces', 
                    'Natural Landscaping and Xeriscaping', 'Decking and Pergolas', 'Outdoor Kitchens and Fire Pits', 'Walkways and Pathways', 
                    'Conservatories and Sunrooms'].each do |option| %>
                        <%= hidden_field_tag 'user_selections[]', option, id: "input_#{option.parameterize}", disabled: true %>
                        <button type="button" class="btn option-btn" onclick="toggleSelection('<%= option.parameterize %>')"><%= option %></button>
                    <% end %>
                </div>
            </div>

            <!-- Interior Elements Section -->
            <div class="feature-card">
                <div class="card-content text-center">
                    <h3>Interior Elements</h3>
                    <% ['Open Plan and Spacious', 'Cozy and Compartmentalized', 'Versatile and Multi-Functional', 
                    'Luxurious and Opulent', 'Minimalist and Uncluttered', 'Rustic and Natural', 'Industrial and Exposed', 
                    'Bohemian and Colorful', 'Traditional and Classic', 'Contemporary and Trendy', 'Artistic and Gallery-Like', 
                    'Tech-Integrated and Smart Homes'].each do |option| %>
                        <%= hidden_field_tag 'user_selections[]', option, id: "input_#{option.parameterize}", disabled: true %>
                        <button type="button" class="btn option-btn" onclick="toggleSelection('<%= option.parameterize %>')"><%= option %></button>
                    <% end %>
                </div>
            </div>

            <!-- Cultural Influences Section -->
            <div class="feature-card">
                <div class="card-content text-center">
                    <h3>Cultural Influences</h3>
                    <% ['Asian', 'European', 'Middle Eastern', 
                    'Indigenous/Native', 'Latin American', 'Scandinavian/Nordic', 
                    'Mediterranean', 'Eastern European', 'African', 
                    'Southeast Asian'].each do |option| %>
                        <%= hidden_field_tag 'user_selections[]', option, id: "input_#{option.parameterize}", disabled: true %>
                        <button type="button" class="btn option-btn" onclick="toggleSelection('<%= option.parameterize %>')"><%= option %></button>
                    <% end %>
                </div>
            </div>

            <!-- Button Group for navigation -->
            <div class="button-group d-flex justify-content-center align-items-center mt-3">
                <%= link_to 'Back', '/architecture_designer/step2', class: 'btn btn-secondary' %>
                <%= form.submit 'Finish', class: 'btn btn-primary' %>
            </div>
            
            <div class="loader"></div>

        <% end %>
    </div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Reference to the form and loader elements
        const form = document.getElementById('step3_form');
        const loader = document.querySelector('.loader');

        // When the form is submitted, show the loader
        form.addEventListener('submit', function(event) {
            loader.style.display = 'block';
        });

        // Logic for handling the toggling of option buttons
        const optionButtons = document.querySelectorAll('.option-btn');
        optionButtons.forEach(function (btn) {
            btn.addEventListener('click', function () {
                this.classList.toggle('active');
                var optionId = this.getAttribute('data-value').split('_').pop();
                toggleSelection(optionId);
            });
        });

        // Function to toggle the disabled state of the hidden inputs
        window.toggleSelection = function(optionId) {
            var input = document.getElementById('input_' + optionId);
            input.disabled = !input.disabled;
        };
    });
</script>
</body>
</html>